It would be great to compile in this manner:

string -> ruby AST
rb AST -> more optimized rb AST 0+ times
rb AST -> js AST
js AST -> more optimized js AST 0+ times
js AST -> string

ideally, the entire toolchain should be in ruby, allowing us to emit just the js that we need.
One possible path to this point is to implement a compiler from jruby AST to js in jruby, and then a parser, AST, optional AST->AST passes, the rbAST->jsAST compiler, and js unparsing in ruby.  Then the whole thing can self-host.


